TEST: WRITE_TO_SUBPROC_CORE
TEST: should ignore newline:
pty[hello how are you]
TEST: empty string:
TEST: no-op escape \N:
TEST: change window size after \N:
sigwin r=99 c=11
TEST: missing newline:
pty[asdf]
TEST: sending sigwinch:
pty[about to resize......all done]
sigwin r=91 c=42
TEST: escape seqs:
pty[line one\012line two\012line 3 \\ (reverse solidus)\012]
TEST: escape seqs straddling:
pty[line one\012line two]
pty[\012line 3 ]
pty[\\ (reverse solidus)\012]
sigwin r=120 c=140
TEST: TEE_TTY_CONTENT
TEST: pending line
sblog[hello\012]
TEST: finished line
sblog[xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx]
sblog[[exceeded]\012]
sblog[abcxyz\012]
sblog[abcdef\012]
TEST: move back x2 and delete to eol
sblog[abcd\012]
TEST: move back x1 and insert
sblog[asdxy\012]
TEST: move back and forward
sblog[asdf\012]
TEST: move back x2 and forward x1, then del to EOL
sblog[asd\012]
TEST: as above, but in separate calls
sblog[asd\012]
TEST: move left x3, move right x2, del EOL; 'right' seq in sep calls
sblog[123 UI\012]
TEST: drop console title escape seq
sblog[abcxyz\012]
sblog[abcxyz\012]
sblog[123456\012]
TEST: drop console title escape seq; separate calls
sblog[abcxyz\012]
TEST: bracketed paste mode
sblog[hello) after\012]
sblog[before (hello) after\012]
TEST: drop color and font
sblog[before : after\012]
sblog[before : after\012]
sblog[before : After\012]
sblog[first ;; second\012]
TEST: \r to move to start of line
sblog[XYZ123\012]
TEST: something makes the logs stop
sblog[[0]~$ seq 1 | less\012]
sblog[[0]~$ # asdf\012]
TEST: \r then delete line
sblog[foo\012]
TEST: arrow keys are translated to escape sequences
TEST: app cursor off: up,down,right,left=ESC [ A,B,C,D
pty[left (\033[D \033[D)\015]
pty[up down up (\033[A \033[B \033[A)\015]
pty[right (\033[C)\015]
TEST: app cursor on: same codes as when off but O instead of [
pty[left (\033OD \033OD)\015]
pty[up down up (\033OA \033OB \033OA)\015]
pty[right (\033OC)\015]
TEST: bad input tolerance: terminate OS cmd without char 7
sblog[don't hide me\012]
TEST: backward to negative linepos, then dump line to log
sblog[x\012]
TEST: escape before sending to attached clients
putrwout[abcd\\0d\\0a\012xyz\\08\\09\\0d\\0a\012]
TEST: pass OS escape to client
putrwout[\\1b]0;asdf\\07xyz\\0d\\0a\012]
TEST: simplify alternate mode signal
putrwout[\\1b[?47\\s2hhello\\0d\\0a\\1b[?47\\s1l\012\\1b[\012?47\\s2hhello\\0d\\0a\\1b\012[?47\\s1l\012\\1b[?1047\\s2hhello\\0d\\0a\\1b[?1047\\s1l\012]
TEST: regression
putrwout[\\1b[?2004h\\1b]0;matvore@penguin: ~\\07\\1b[01;32mmatvore@penguin\\1b[00m:\\1b[01;34m~\\1b[00m$ \\0d\\1b[K\\1b]0;matvore@penguin: ~\\07\\1b[01;32mmatvore@penguin\\1b[00m:\\1b[01;34m~\\1b[00m$ \012]
TEST: passthrough escape \033[1P from subproc to client
putrwout[\\1b[1P\012]
putrwout[\\1b[4P\012]
putrwout[\\1b[5P\012]
putrwout[\\1b[16P\012]
TEST: delete 5 characters ahead
sblog[$ sdfasdf # asdfasdfasdf\012]
TEST: delete 12 characters ahead
sblog[$  # asdfasdfasdf\012]
TEST: delete 16 characters ahead
sblog[$ sdfasdfasdf\012]
TEST: save rawout from before OS escape
putrwout[abc\\1b]0;new-t\012]
TEST: <between calls>
putrwout[itle\\07xyz\\0d\\0a\012]
TEST: 1049h/l code for switching to/from alternate screen + other ops
putrwout[abc \\1b[?1049\\ss\\s2\\clh\012-in-\\1b[?1049\\s1\\rslout\012]
TEST: dump of state
recount_state[\\s1]
putrwout[\\1b[?47\\s2h\012]
recount_state[\\s2]
recount_state[\\s2]
putrwout[\\1b[?47\\s1l\012]
recount_state[\\s1]
putrwout[\\1b[?1049\\ss\\s2\\clh\012]
recount_state[\\s2]
putrwout[\\1b[?1049\\s1\\rsl\012]
recount_state[\\s1]
TEST: do not save bell character in plain text log
sblog[ready... D I N G!\012]
TEST: editing a long line
sigwin r=30 c=104
sblog[cd platform2\012]
sblog[[0]platform2$ git log --graph --format="%ct %h %s" |perl -pE'/^(.*[^0-9])?(\\d{8,10})\\b(.*)/ and $_=$1.`d\\n//'|less \012]
TEST: editing a long line in a narrower window
sigwin r=80 c=61
sblog[matvore@penguin:~$ echo a --------------------------------------------------------------------------------\012]
TEST: go up more rows than exist in the linebuf
sigwin r=80 c=60
TEST: set long then shorter title
cli[\\@title:longtitle\012]
cli[\\@title:1+1++1\012]
TEST: title in recounted state
cli[\\@title:sometitle\012]
recount_state[\\s1]
recount_state[\\@title:sometitle\012]
TEST: ... continued: unset title, respond with empty title
cli[\\@title:\012]
pty[thisisnormalkeybinput]
(should not include title here): recount_state[\\s1]
TEST: title is too long
cli[\\@title:abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab]
cli[cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc]
cli[abcabcab\012]
putrwout[this is plain terminal text\012]
sblog[this is plain terminal text\012]
stored title length: 128
TEST: do not include altscreen content in scrollback log
sblog[xyz\012]
sblog[abcrest\012]
TEST: move to col
sblog[] \012]
sblog[cts-tf > run cts -m CtsInitTestCases -t keychords#init_inotify\012]
TEST: move to col 2
sblog[axyz\012]
TEST: shift rest of line then overwrite
sblog[xyz234\012]
TEST: shift remaining characters right
sblog[xyz       asdf\012]
TEST: shift remaining characters right more
sblog[xyz \012]
sblog[xyz            asdf\012]
sblog[:)xyz  ..more\012]
sblog[:)xyzmore\012]
sblogmore:)  6123456123456123456123456123456123456123456123456\012]
TEST: move more characters right than are in the line
sblogabcd\012]
sblog[!!!!                                              abcd\012]
TEST: make long line too big to fit into buffer
sblog
TEST: empty WERMPROFPATH
TEST: non-existent and empty dirs in WERMPROFPATH
reading profile dir at: test/profilesnoent
opendir: No such file or directory
reading profile dir at: test/profiles1
TEST: match js and print
reading profile dir at: test/profiles1
profsig[\\@auxjs:myjsjs,stuffmacrosjs\012]
TEST: name error but matches other line to print auxjs
reading profile dir at: test/profiles2
illegal char '.' in profile name group=errgrp line=1
profsig[\\@auxjs:okjs\012]
TEST: name error no match
reading profile dir at: test/profiles2
illegal char '.' in profile name group=errgrp line=1
profile with name 'xyz' not found
TEST: name error but matches other line to print preamble
reading profile dir at: test/profiles2
illegal char '.' in profile name group=errgrp line=1
profsig[better\012]
TEST: empty preamble for match 1
reading profile dir at: test/profiles1
TEST: empty preamble for match 2
reading profile dir at: test/profiles1
TEST: empty preamble for match 3
reading profile dir at: test/profiles1
TEST: long preamble 1
reading profile dir at: test/profiles1
profsig[abcdefghijklmnopqrstuvwxyz1234abcdefghijklmnopqrstuvwxyz1234abcd]
profsig[efghijklmnopqrstuvwxyz1234\012]
TEST: long preamble 2
reading profile dir at: test/profiles1
profsig[ABCDEFGHIJKLMNOPQRSTUVWXYZ1234ABCDEFGHIJKLMNOPQRSTUVWXYZ1234ABCD]
profsig[EFGHIJKLMNOPQRSTUVWXYZ1234\012]
TEST: empty js for match 1
reading profile dir at: test/profiles1
TEST: empty js for match 2
reading profile dir at: test/profiles1
TEST: empty js for match 3
reading profile dir at: test/profiles1
TEST: empty js for match 4
reading profile dir at: test/profiles1
TEST: url-encoding-related chars not allowed in termid
reading profile dir at: test/profiles3
illegal char '&' in profile name group=badnames line=1
illegal char '+' in profile name group=badnames line=2
illegal char '=' in profile name group=badnames line=2
illegal char ' ' in profile name group=badnames line=3
illegal char '%' in profile name group=badnames line=5
illegal char '?' in profile name group=badnames line=6
illegal char '\' in profile name group=badnames line=7
illegal char '/' in profile name group=badnames line=7
illegal char '"' in profile name group=badnames line=8
TEST: bad names while outputting new session list
profsig[<ul id="ctl---basic" class="newsessin-list"><li><a class="newses]
reading profile dir at: test/profiles3
profsig[sin-link" href="/?termid="><em>basic</em></a></ul>\012<ul id="ctl-b]
illegal char '&' in profile name group=badnames line=1
illegal char '+' in profile name group=badnames line=2
illegal char '=' in profile name group=badnames line=2
illegal char ' ' in profile name group=badnames line=3
profsig[adnames" class="newsessin-list"><li><a class="newsessin-link" hr]
illegal char '%' in profile name group=badnames line=5
illegal char '?' in profile name group=badnames line=6
illegal char '\' in profile name group=badnames line=7
illegal char '/' in profile name group=badnames line=7
illegal char '"' in profile name group=badnames line=8
profsig[ef="/?termid=okname">okname</a></ul>\012]
TEST: dump newsessin list
profsig[<ul id="ctl---basic" class="newsessin-list"><li><a class="newses]
reading profile dir at: test/profilesname
profsig[sin-link" href="/?termid="><em>basic</em></a></ul>\012<ul id="ctl-t]
profsig[hegrp" class="newsessin-list"><li><a class="newsessin-link" href]
profsig[="/?termid=item1">item1</a><li><a class="newsessin-link" href="/]
profsig[?termid=foo">foo</a><li><a class="newsessin-link" href="/?termid]
profsig[=item3">item3</a></ul>\012]
TEST: empty profile name
profsig[<ul id="ctl---basic" class="newsessin-list"><li><a class="newses]
reading profile dir at: test/emptyprof
profsig[sin-link" href="/?termid="><em>basic</em></a></ul>\012<ul id="ctl-g]
profsig[rp" class="newsessin-list"><li><a class="newsessin-link" href="/]
profsig[?termid=ok1">ok1</a><li><a class="newsessin-link" href="/?termid]
profsig[=ok2">ok2</a></ul>\012]
reading profile dir at: test/emptyprof
profsig[echo empty1\012]
reading profile dir at: test/emptyprof
profsig[\\@auxjs:jsempty2\012]
TEST: ephemeral session uses basic profile config
reading profile dir at: test/emptyprof
profsig[echo empty1\012\\@auxjs:jsempty2\012]
TEST: parse termid arg
hello
TEST: unrecognized query string arg
invalid query string arg at char pos 13 in 'logview=test&huhtest=987'
logview=test
TEST: empty arg, escapes, and omitted arg
0,!escapes~andE,1
TEST OUTSTREAMS
hello
goodbye
customcap[abcdefg]
customcap[hijklmn]
customcap[opqrstu]
customcap[vwxyz..]
customcap[..01234]
about to flush: customcap[56789]
grow unboundedly: 40,57 80,84
grow unboundedly[abcdefghijklmnopqrstuvwxyz....0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ....!@#$!@#$!?]
finishing capacity: 84
customcap+multipleapnd[a121aba121aba121]
customcap+multipleapnd[aba121aba121aba1]
customcap+multipleapnd[21aba121aba121ab]
customcap+multipleapnd[a]
access obj with bad ID
[binary_name]: bad id: -2
valid use of new obj, then access invalid fld
[binary_name]: fld 6 out of range for obj -1
0,0,0,0,0,42,99,100,-5,1048575,
multiple IDs
allocate 100 fresh id's
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,
re-use 3 and allocate 7 fresh id's
42,75,50,100,101,102,103,104,105,106,
freed an ID, now use it [crash]
[binary_name]: unallocated id: -42
dequeue test
pop only value: 42
is empty, so should have 0, 0: 0, 0
pop one of two values: 44
about to pop 21 values to make it empty again
46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,
push 100 values onto freshly-made dequeue
9,10,13,18,25,34,45,58,73,90,109,130,153,178,205,234,265,298,333,370,409,450,493,538,585,634,685,738,793,850,909,970,1033,1098,1165,1234,1305,1378,1453,1530,1609,1690,1773,1858,1945,2034,2125,2218,2313,2410,2509,2610,2713,2818,2925,3034,3145,3258,3373,3490,3609,3730,3853,3978,4105,4234,4365,4498,4633,4770,4909,5050,5193,5338,5485,5634,5785,5938,6093,6250,6409,6570,6733,6898,7065,7234,7405,7578,7753,7930,8109,8290,8473,8658,8845,9034,9225,9418,9613,9810,
about to pop one too many
[binary_name]: dequeue -1 is already empty; cannot pop
