#!/bin/sh
# Copyright 2023 Google LLC
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file or at
# https://developers.google.com/open-source/licenses/bsd

cd `dirname $0`

# Don't leak current Werm config into tests and builds
unset WERMPROFPATH
unset WERMSOCKSDIR
unset WERMVARDIR
unset WERMSRCDIR
unset WERMJSPATH
unset WERMFLAGS

(
	cd test/raw || exit 1

	echo '#include <unistd.h>' >| data.h

	find . -type f \
		-not \( -name '*.c' -o -name '*.h' -o -name .gitignore \) |
	while read fn
	do
		fnb=`basename $fn`

		printf 'extern const char test_%s[];\n' "$fnb" >> data.h
		printf 'extern const size_t test_%s_size;\n' "$fnb" >> data.h

		printf '#include "test/raw/data.h"\n' >| $fn.c
		printf 'const size_t test_%s_size = %d;\n' "$fnb"  `wc -c <"$fn"` >> "$fn.c"
		printf 'const char test_%s[] = ' "$fnb" >> "$fn.c"

		touch /tmp/line.$$
		while :; do
			rm /tmp/line.$$
			dd status=none bs=80 count=1 of=/tmp/line.$$
			test -s /tmp/line.$$ || break
			printf '"' >> "$fn.c"
			sed '
s/\\/\\\\/g
s/\x00/\\000/g
s/\x07/\\007/g
s/\x1b/\\033/g
s/\x0d/\\015/g
s/"/\\042/g
s/\x08/\\010/g
$!s/$/\\012/
			' /tmp/line.$$ | tr -d '\n' >> "$fn.c"
			printf '"\n' >> "$fn.c"
		done < "$fn" 
		printf ';\n' >> "$fn.c"
	done
)

if ! cc -x c -std=c99 -I. \
	-D_POSIX_C_SOURCE=200809L		\
	-D_XOPEN_SOURCE=600			\
	-D_GNU_SOURCE				\
	-Werror=format				\
	-Werror=return-type			\
	-Werror=unused-variable			\
	-Werror=missing-declarations		\
	-Werror=unused-function			\
	-Werror=pointer-sign			\
	-Werror=implicit-function-declaration	\
	-Werror=incompatible-pointer-types	\
	$WERMCCFLAGS				\
	-o run					\
	session.c				\
	http.c					\
	inbound.c				\
	outstreams.c				\
	shared.c				\
	spawner.c				\
	uniqid.c				\
	test/raw/*.c				\
	third_party/dtach/*.c			\
	tm.c					\
	wts.c					\
	-lutil					\
	-lmd4c-html				\
	-lssl					\
	-lcrypto
then
	echo 'Build failed - do you need to install dependencies?'	>&2
	grep -A4 'following packages are installed' README.md		>&2
	exit 1
fi

if ! ctags=`which ctags-exuberant`; then
	echo '`sudo apt install exuberant-ctags` to make tags file' 2>&1
else
	find .	-path ./third_party/websocketd		-prune -o	\
		-path ./var				-prune -o	\
		-type f \( -name \*.h -o -name \*.c \)	-print		\
	>/tmp/tag_files.$$

	$ctags --format=1 `cat /tmp/tag_files.$$`
fi

echo 'running tests...' >&2
for tfn in 'run test' testtm; do
	./$tfn || echo "TEST '$tfn' TERMINATED WITH ERROR !!1!"
done >/tmp/testout.$$ 2>&1

err=

if ! diff -u passing_test_output /tmp/testout.$$
then
	echo "build succeeded but tests failed; to update:
	cp /tmp/testout.$$ $PWD/passing_test_output"
	err=1
fi >&2

# We pipe this into wc first because grep may not recognize a null byte
# as expected.
if </tmp/testout.$$ tr -d '\n -~' | wc -c | grep -q '[^0]'
then
	echo 'TEST OUTPUT HAS NON-PRINTABLE OR CONTROL CHAR(S) !!1!' >&2
	err=1
fi

test -z "$err"
